clear all

Nbits=30;
Te=5;
N=10;
Ts=N*Te;
alpha=0.2; % plus tard 0.25 et 0.35 


modObj=comm.PSKModulator('BitInput',true, 'ModulationOrder', 8,'PhaseOffset',pi/8); 
bits = randi([0 1],  Nbits,1);
data=step(modObj,bits)';
demodObj=comm.PSKDemodulator('BitOutput',true, 'ModulationOrder', 8,'PhaseOffset',pi/8); 

dirac=[1 zeros(1,Te-1)];
filtre_RCS=rcosdesign(alpha,N,Te,'sqrt');

suite_diracs=[kron(data,[1,zeros(1,Ts-1)]),zeros(1,Nbits*Ts)];
signal_mis_en_forme=filter(filtre_RCS,1,suite_diracs);


figure();
title("signal recu");
 signal_recu = filter(filtre_RCS, 1, signal_mis_en_forme);
 %Décalage originelle à reprendre après l'introduction du canal
 %offset=Ts+Ts/2;
 %prelevement=offset+Ts+1:Ts:length(data)*(Ts)+offset+1; 
 
 %Décalage adapté à l'absence de canal
 offset=Ts;
 prelevement=offset+1:Ts:length(data)*(Ts)+offset; 

 symboles_recus=signal_recu(prelevement)';
 bits_recus=step(demodObj,symboles_recus);
 isequal(bits_recus,bits)
 
plot(real(signal_recu(1:length(data)*Ts+Ts/2)));
hold on;
plot(prelevement,real(signal_recu(prelevement)),'rx');





%bar(prelevement,ones(1,length(prelevement)),0.005);
%constellation(h);
%scatterplot(data);
%plot(real(filtre_RCS))



